name: Makefile CI

on:
  workflow_dispatch:


jobs:
  get-date-release-name:
    runs-on: self-hosted
    outputs:
      release_name: ${{ steps.current-date.outputs.release_name }}
      release_id: ${{ steps.get-release-id.outputs.release_id }} 
      release_url: ${{ steps.current-date.outputs.release_url }}
      cache_key: ${{ steps.current-date.outputs.cache_key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get Current Date and Release Name
        id: current-date
        run: |
          current_date=$(date +'%Y-%m-%d')
          release_name="VocalFussionDriver-$(uname -r)"
          cache_key="VocalFussionDriver-${{ github.run_id }}"
          release_url="https://github.com/${{ github.repository }}/releases/download/${release_name}"
          echo "release_name=$release_name" >> $GITHUB_OUTPUT
          echo "release_url=$release_url" >> $GITHUB_OUTPUT
          echo "cache_key=$cache_key" >> $GITHUB_OUTPUT

      - name: Print outputs
        shell: bash
        run: |
          echo "release_name: ${{ steps.current-date.outputs.release_name }}" 
          echo "release_url: https://github.com/${{ github.repository }}/releases/download/${{ steps.current-date.outputs.release_name }}"
          echo "cache_key: ${{ steps.current-date.outputs.cache_key }}" 
      
      - name: Check if Release Exists
        id: get-release-id
        run: |
          release_name="${{ steps.current-date.outputs.release_name }}"
          release=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/$release_name")
          release_id=$(echo $release | jq -r .id)
          if [[ "$release_id" == "null" ]]; then
          echo "release_id=null" 
          release=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{\"tag_name\":\"$release_name\",\"name\":\"$release_name\",\"body\":\"${{ inputs.base_txt }}\"}" \
              "https://api.github.com/repos/${{ github.repository }}/releases")
          release_id=$(echo $release | jq -r .id)
          fi
          echo "release_id=$release_id" >> $GITHUB_OUTPUT
  build:
    needs: [get-date-release-name]
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Make
      run: |
        cd driver
        make -j $(nproc) KDIR="/lib/modules/$(uname -r)/build" all

    - name: Upload to release
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: /home/andlo/WORK/actions-runner.OLD/_work/VocalFusionDriver/VocalFusionDriver/driver/vocalfusion-soundcard.ko
        release_id: ${{ needs.get-date-release-name.outputs.release_id }}
        draft: false
        overwrite: true
        prerelease: false
        verbose: true